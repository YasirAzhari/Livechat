{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yasir\\\\livechat\\\\src\\\\Chatpage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState, useContext } from 'react';\nimport { UserContext } from './UserContext';\nimport Chat from './Chat'; //import { io } from 'socket.io-client'\n//const socket = io(\"http://127.0.0.1:5000\");\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chatpage = () => {\n  _s();\n\n  const [messages, updateMessages] = useState([]);\n  const messageRef = useRef();\n  const {\n    username\n  } = useContext(UserContext);\n  useEffect(() => {// socket.on(\"connection success\", (data)=>{\n    //   updateMessages(m=>{return data.logs})\n    // })\n  }); // useEffect(()=>{\n  // socket.on(\"receive message\", (data)=>{\n  //     console.log(data.message)\n  //     updateMessages(m=>{return [...m, data.message]})\n  // })\n  // }, [])\n\n  function handleSend(e) {\n    if (e.key !== \"Enter\") return;\n    const text = messageRef.current.value;\n    if (text === '') return; //socket.emit('send message', {'username': username, 'message': text})\n\n    updateMessages(m => {\n      return [...m, {\n        'username': username,\n        'message': text\n      }];\n    });\n    messageRef.current.value = null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"total\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox\",\n      children: /*#__PURE__*/_jsxDEV(Chat, {\n        className: \"chat\",\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"chatInput\",\n        onKeyDown: handleSend,\n        ref: messageRef,\n        type: \"text\",\n        placeholder: \"Enter a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chatpage, \"YPW9kXgGrCYcNHXpZ61fbd3MU1E=\");\n\n_c = Chatpage;\nexport default Chatpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatpage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useContext","UserContext","Chat","Chatpage","messages","updateMessages","messageRef","username","handleSend","e","key","text","current","value","m"],"sources":["C:/Users/Yasir/livechat/src/Chatpage.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useContext} from 'react'\r\nimport { UserContext } from './UserContext'\r\nimport Chat from './Chat'\r\n//import { io } from 'socket.io-client'\r\n//const socket = io(\"http://127.0.0.1:5000\");\r\n\r\n\r\nconst Chatpage = () => {\r\n    const [messages, updateMessages] = useState([])\r\n    const messageRef = useRef()\r\n    const {username} = useContext(UserContext)\r\n\r\n    useEffect(()=>{\r\n        // socket.on(\"connection success\", (data)=>{\r\n        //   updateMessages(m=>{return data.logs})\r\n        // })\r\n      })\r\n    \r\n    // useEffect(()=>{\r\n    // socket.on(\"receive message\", (data)=>{\r\n    //     console.log(data.message)\r\n    //     updateMessages(m=>{return [...m, data.message]})\r\n    // })\r\n    // }, [])\r\n\r\n\r\n    function handleSend(e) {\r\n        if (e.key !== \"Enter\") return\r\n        const text = messageRef.current.value\r\n        if (text === '') return\r\n        //socket.emit('send message', {'username': username, 'message': text})\r\n        updateMessages(m=>{return [...m, {'username': username, 'message': text}]})\r\n        messageRef.current.value = null\r\n    \r\n      }\r\n\r\n    return ( \r\n        <div className='total'>\r\n            <div className='chatbox'>\r\n                <Chat className='chat' messages = {messages}/>\r\n            </div>\r\n            <div className='bot'>\r\n                <input className='chatInput' onKeyDown={handleSend} ref={messageRef} type='text' placeholder='Enter a message...'/>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Chatpage;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,EAA6CC,UAA7C,QAA8D,OAA9D;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;AACA;;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,QAAD,EAAWC,cAAX,IAA6BN,QAAQ,CAAC,EAAD,CAA3C;EACA,MAAMO,UAAU,GAAGR,MAAM,EAAzB;EACA,MAAM;IAACS;EAAD,IAAaP,UAAU,CAACC,WAAD,CAA7B;EAEAJ,SAAS,CAAC,MAAI,CACV;IACA;IACA;EACD,CAJM,CAAT,CALmB,CAWnB;EACA;EACA;EACA;EACA;EACA;;EAGA,SAASW,UAAT,CAAoBC,CAApB,EAAuB;IACnB,IAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;IACvB,MAAMC,IAAI,GAAGL,UAAU,CAACM,OAAX,CAAmBC,KAAhC;IACA,IAAIF,IAAI,KAAK,EAAb,EAAiB,OAHE,CAInB;;IACAN,cAAc,CAACS,CAAC,IAAE;MAAC,OAAO,CAAC,GAAGA,CAAJ,EAAO;QAAC,YAAYP,QAAb;QAAuB,WAAWI;MAAlC,CAAP,CAAP;IAAuD,CAA5D,CAAd;IACAL,UAAU,CAACM,OAAX,CAAmBC,KAAnB,GAA2B,IAA3B;EAED;;EAEH,oBACI;IAAK,SAAS,EAAC,OAAf;IAAA,wBACI;MAAK,SAAS,EAAC,SAAf;MAAA,uBACI,QAAC,IAAD;QAAM,SAAS,EAAC,MAAhB;QAAuB,QAAQ,EAAIT;MAAnC;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,eAII;MAAK,SAAS,EAAC,KAAf;MAAA,uBACI;QAAO,SAAS,EAAC,WAAjB;QAA6B,SAAS,EAAEI,UAAxC;QAAoD,GAAG,EAAEF,UAAzD;QAAqE,IAAI,EAAC,MAA1E;QAAiF,WAAW,EAAC;MAA7F;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH,CAvCD;;GAAMH,Q;;KAAAA,Q;AAyCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}