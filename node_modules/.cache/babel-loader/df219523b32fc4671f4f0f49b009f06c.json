{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yasir\\\\livechat\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Chat from './Chat';\nimport './App.css'; // import axios from 'axios' \n\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('http://127.0.0.1:5000');\n\nfunction App() {\n  _s();\n\n  const [messages, updateMessages] = useState([]);\n  const messageRef = useRef(); // const [loggedIn, setLoggedIn] = useState(false)\n  // useEffect(() => {\n  //   axios.get('http://127.0.0.1:5000').then(function (response){\n  //     updateMessages(m=>{return response.data.messages})\n  //   })\n  // }, []);\n\n  useEffect(() => {\n    socket.on(\"connection success\", data => {\n      console.log(data.logs);\n      updateMessages(m => {\n        return data.logs;\n      });\n    });\n  });\n\n  function handleSend(e) {\n    if (e.key !== \"Enter\") return;\n    const text = messageRef.current.value;\n    if (text === '') return;\n    socket.emit('send message', {\n      'username': 'yasir',\n      'message': text\n    });\n    updateMessages(m => {\n      return [...m, {\n        'username': 'yasir',\n        'message': text\n      }];\n    });\n    messageRef.current.value = null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox\",\n      children: /*#__PURE__*/_jsxDEV(Chat, {\n        className: \"chat\",\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onKeyDown: handleSend,\n        ref: messageRef,\n        type: \"text\",\n        placeholder: \"Enter a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"CLWlHOmMU95/PotN/dL40HKfPos=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Chat","io","socket","connect","App","messages","updateMessages","messageRef","on","data","console","log","logs","m","handleSend","e","key","text","current","value","emit"],"sources":["C:/Users/Yasir/livechat/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport Chat from './Chat'\nimport './App.css'\n// import axios from 'axios' \nimport { io } from 'socket.io-client'\nconst socket = io.connect('http://127.0.0.1:5000')\n\nfunction App() {\n  const [messages, updateMessages] = useState([])\n  const messageRef = useRef()\n  // const [loggedIn, setLoggedIn] = useState(false)\n\n  // useEffect(() => {\n  //   axios.get('http://127.0.0.1:5000').then(function (response){\n  //     updateMessages(m=>{return response.data.messages})\n  //   })\n  // }, []);\n\n  useEffect(()=>{\n    socket.on(\"connection success\", (data)=>{\n      console.log(data.logs)\n      updateMessages(m=>{return data.logs})\n    })\n  })\n\n  function handleSend(e) {\n    if (e.key !== \"Enter\") return\n    const text = messageRef.current.value\n    if (text === '') return\n    socket.emit('send message', {'username': 'yasir', 'message': text})\n    updateMessages(m=>{return [...m, {'username': 'yasir', 'message': text}]})\n    messageRef.current.value = null\n\n  }\n  return (\n    <>\n      <div className='chatbox'>\n        <Chat className='chat' messages = {messages}/>\n      </div>\n      <div className='bot'>\n        <input onKeyDown={handleSend} ref={messageRef} type='text' placeholder='Enter a message...'/>\n      </div>\n    </>\n    \n  )\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,WAAP,C,CACA;;AACA,SAASC,EAAT,QAAmB,kBAAnB;;;AACA,MAAMC,MAAM,GAAGD,EAAE,CAACE,OAAH,CAAW,uBAAX,CAAf;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,QAAD,EAAWC,cAAX,IAA6BP,QAAQ,CAAC,EAAD,CAA3C;EACA,MAAMQ,UAAU,GAAGT,MAAM,EAAzB,CAFa,CAGb;EAEA;EACA;EACA;EACA;EACA;;EAEAD,SAAS,CAAC,MAAI;IACZK,MAAM,CAACM,EAAP,CAAU,oBAAV,EAAiCC,IAAD,IAAQ;MACtCC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB;MACAN,cAAc,CAACO,CAAC,IAAE;QAAC,OAAOJ,IAAI,CAACG,IAAZ;MAAiB,CAAtB,CAAd;IACD,CAHD;EAID,CALQ,CAAT;;EAOA,SAASE,UAAT,CAAoBC,CAApB,EAAuB;IACrB,IAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;IACvB,MAAMC,IAAI,GAAGV,UAAU,CAACW,OAAX,CAAmBC,KAAhC;IACA,IAAIF,IAAI,KAAK,EAAb,EAAiB;IACjBf,MAAM,CAACkB,IAAP,CAAY,cAAZ,EAA4B;MAAC,YAAY,OAAb;MAAsB,WAAWH;IAAjC,CAA5B;IACAX,cAAc,CAACO,CAAC,IAAE;MAAC,OAAO,CAAC,GAAGA,CAAJ,EAAO;QAAC,YAAY,OAAb;QAAsB,WAAWI;MAAjC,CAAP,CAAP;IAAsD,CAA3D,CAAd;IACAV,UAAU,CAACW,OAAX,CAAmBC,KAAnB,GAA2B,IAA3B;EAED;;EACD,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,SAAf;MAAA,uBACE,QAAC,IAAD;QAAM,SAAS,EAAC,MAAhB;QAAuB,QAAQ,EAAId;MAAnC;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAK,SAAS,EAAC,KAAf;MAAA,uBACE;QAAO,SAAS,EAAES,UAAlB;QAA8B,GAAG,EAAEP,UAAnC;QAA+C,IAAI,EAAC,MAApD;QAA2D,WAAW,EAAC;MAAvE;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA,gBADF;AAWD;;GAtCQH,G;;KAAAA,G;AAwCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}