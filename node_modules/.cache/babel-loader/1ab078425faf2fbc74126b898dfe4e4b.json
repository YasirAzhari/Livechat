{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yasir\\\\livechat\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Chat from './Chat';\nimport './App.css';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('http://127.0.0.1:5000');\n\nfunction App() {\n  _s();\n\n  const [messages, updateMessages] = useState([]);\n  const messageRef = useRef(); // useEffect(() => {\n  //   axios.get('http://127.0.0.1:5000').then(function (response){\n  //     updateMessages(m=>{return response.data.messages})\n  //   })\n  // }, []);\n\n  useEffect(() => {\n    socket.on(\"connection success\", data => {\n      console.log(data);\n    });\n  }, [socket]);\n\n  function handleSend(e) {\n    if (e.key !== \"Enter\") return;\n    const text = messageRef.current.value;\n    if (text === '') return;\n    axios.post('http://127.0.0.1:5000', {\n      'username': 'yasir',\n      'message': text\n    }).catch(e => console.log(e)).then(updateMessages(m => {\n      return [...m, {\n        'username': 'yasir',\n        'message': text\n      }];\n    }));\n    messageRef.current.value = null;\n  }\n\n  return (\n    /*#__PURE__*/\n    // <>\n    //   <main>\n    //     <Chat className='chat' messages = {messages}/>\n    //   </main>\n    //   <div className='bot'>\n    //     <input onKeyDown={handleSend} ref={messageRef} type='text' placeholder='Enter a message...'/>\n    //   </div>\n    // </>\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(Chat, {\n          className: \"chat\",\n          messages: messages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bot\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onKeyDown: handleSend,\n          ref: messageRef,\n          type: \"text\",\n          placeholder: \"Enter a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  );\n}\n\n_s(App, \"CLWlHOmMU95/PotN/dL40HKfPos=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Chat","axios","io","socket","connect","App","messages","updateMessages","messageRef","on","data","console","log","handleSend","e","key","text","current","value","post","catch","then","m"],"sources":["C:/Users/Yasir/livechat/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport Chat from './Chat'\nimport './App.css'\nimport axios from 'axios' \nimport { io } from 'socket.io-client'\nconst socket = io.connect('http://127.0.0.1:5000')\n\nfunction App() {\n  const [messages, updateMessages] = useState([])\n  const messageRef = useRef()\n\n  // useEffect(() => {\n  //   axios.get('http://127.0.0.1:5000').then(function (response){\n  //     updateMessages(m=>{return response.data.messages})\n  //   })\n  // }, []);\n\n  useEffect(()=>{\n    socket.on(\"connection success\", (data)=>{\n      console.log(data)\n    })\n  },[socket])\n\n  function handleSend(e) {\n    if (e.key !== \"Enter\") return\n    const text = messageRef.current.value\n    if (text === '') return\n    axios.post('http://127.0.0.1:5000',{'username': 'yasir', 'message': text}).catch(e=>console.log(e)).then(\n      updateMessages(m=>{return [...m, {'username': 'yasir', 'message': text}]})\n    )\n    messageRef.current.value = null\n\n  }\n  return (\n    // <>\n    //   <main>\n    //     <Chat className='chat' messages = {messages}/>\n    //   </main>\n    //   <div className='bot'>\n    //     <input onKeyDown={handleSend} ref={messageRef} type='text' placeholder='Enter a message...'/>\n    //   </div>\n    // </>\n    <>\n      <main>\n        <Chat className='chat' messages = {messages}/>\n      </main>\n      <div className='bot'>\n        <input onKeyDown={handleSend} ref={messageRef} type='text' placeholder='Enter a message...'/>\n      </div>\n    </>\n    \n  )\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAT,QAAmB,kBAAnB;;;AACA,MAAMC,MAAM,GAAGD,EAAE,CAACE,OAAH,CAAW,uBAAX,CAAf;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,QAAD,EAAWC,cAAX,IAA6BR,QAAQ,CAAC,EAAD,CAA3C;EACA,MAAMS,UAAU,GAAGV,MAAM,EAAzB,CAFa,CAIb;EACA;EACA;EACA;EACA;;EAEAD,SAAS,CAAC,MAAI;IACZM,MAAM,CAACM,EAAP,CAAU,oBAAV,EAAiCC,IAAD,IAAQ;MACtCC,OAAO,CAACC,GAAR,CAAYF,IAAZ;IACD,CAFD;EAGD,CAJQ,EAIP,CAACP,MAAD,CAJO,CAAT;;EAMA,SAASU,UAAT,CAAoBC,CAApB,EAAuB;IACrB,IAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;IACvB,MAAMC,IAAI,GAAGR,UAAU,CAACS,OAAX,CAAmBC,KAAhC;IACA,IAAIF,IAAI,KAAK,EAAb,EAAiB;IACjBf,KAAK,CAACkB,IAAN,CAAW,uBAAX,EAAmC;MAAC,YAAY,OAAb;MAAsB,WAAWH;IAAjC,CAAnC,EAA2EI,KAA3E,CAAiFN,CAAC,IAAEH,OAAO,CAACC,GAAR,CAAYE,CAAZ,CAApF,EAAoGO,IAApG,CACEd,cAAc,CAACe,CAAC,IAAE;MAAC,OAAO,CAAC,GAAGA,CAAJ,EAAO;QAAC,YAAY,OAAb;QAAsB,WAAWN;MAAjC,CAAP,CAAP;IAAsD,CAA3D,CADhB;IAGAR,UAAU,CAACS,OAAX,CAAmBC,KAAnB,GAA2B,IAA3B;EAED;;EACD;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MAAA,wBACE;QAAA,uBACE,QAAC,IAAD;UAAM,SAAS,EAAC,MAAhB;UAAuB,QAAQ,EAAIZ;QAAnC;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QAAK,SAAS,EAAC,KAAf;QAAA,uBACE;UAAO,SAAS,EAAEO,UAAlB;UAA8B,GAAG,EAAEL,UAAnC;UAA+C,IAAI,EAAC,MAApD;UAA2D,WAAW,EAAC;QAAvE;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;EATF;AAmBD;;GA7CQH,G;;KAAAA,G;AA+CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}